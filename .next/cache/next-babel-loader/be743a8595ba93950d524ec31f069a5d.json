{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                setError(err);\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/gzaba/dev/flatiron/Projects/Covid-19 Tracker/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","fetch","then","res","json","err","data"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAsB;AAAA,kBACPH,QAAQ,EADD;AAAA,MAC1BI,KAD0B;AAAA,MACnBC,QADmB;;AAAA,mBAEHL,QAAQ,CAAC,KAAD,CAFL;AAAA,MAE1BM,OAF0B;AAAA,MAEjBC,UAFiB;;AAAA,mBAGPP,QAAQ,EAHD;AAAA,MAG1BQ,KAH0B;AAAA,MAGnBC,QAHmB;;AAIjCR,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIH,cAAAA,UAAU,CAAC,IAAD,CAAV;AADJ;AAAA,+CAEuBI,KAAK,CAACR,GAAD,CAAL,CAAWS,IAAX,CAAgB,UAAAC,GAAG;AAAA,uBAClCA,GAAG,CAACC,IAAJ,EADkC;AAAA,eAAnB,WAEX,UAAAC,GAAG,EAAI;AACXN,gBAAAA,QAAQ,CAACM,GAAD,CAAR;AACH,eAJkB,CAFvB;;AAAA;AAEUC,cAAAA,IAFV;AAQIX,cAAAA,QAAQ,CAACW,IAAD,CAAR;AACAT,cAAAA,UAAU,CAAC,KAAD,CAAV;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAG,IAAAA,SAAS;AACZ,GAbQ,EAaN,EAbM,CAAT;AAcA,SAAO;AACHN,IAAAA,KAAK,EAALA,KADG;AAEHE,IAAAA,OAAO,EAAPA,OAFG;AAGHE,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH","sourcesContent":["import {useState, useEffect} from 'react';\n\nexport default function useStats(url){\n    const [stats, setStats] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    useEffect(() => {\n        async function fetchData(){\n            setLoading(true);\n            const data = await fetch(url).then(res => \n                res.json()\n            ).catch(err => {\n                setError(err);\n            })\n          \n            setStats(data);\n            setLoading(false);\n        }\n        fetchData();\n    }, []);\n    return {\n        stats,\n        loading,\n        error,\n    }\n}"]},"metadata":{},"sourceType":"module"}