{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      const data = await fetch(url).then(res => res.json()).catch(err => {\n        setError(err);\n      });\n      setStats(data);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/gzaba/dev/flatiron/Projects/Covid-19 Tracker/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","data","fetch","then","res","json","catch","err"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAsB;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,SAAf,GAA0B;AACtBH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AACR,YAAME,IAAI,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAL,CAAWU,IAAX,CAAgBC,GAAG,IAClCA,GAAG,CAACC,IAAJ,EADe,EAEjBC,KAFiB,CAEXC,GAAG,IAAI;AACXR,QAAAA,QAAQ,CAACQ,GAAD,CAAR;AACH,OAJkB,CAAnB;AAMAZ,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDG,IAAAA,SAAS;AACZ,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAO;AACHN,IAAAA,KADG;AAEHE,IAAAA,OAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH","sourcesContent":["import {useState, useEffect} from 'react';\n\nexport default function useStats(url){\n    const [stats, setStats] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    useEffect(() => {\n        async function fetchData(){\n            setLoading(true);\n            setError();\n            const data = await fetch(url).then(res => \n                res.json()\n            ).catch(err => {\n                setError(err);\n            })\n          \n            setStats(data);\n            setLoading(false);\n        }\n        fetchData();\n    }, []);\n    return {\n        stats,\n        loading,\n        error,\n    }\n}"]},"metadata":{},"sourceType":"module"}